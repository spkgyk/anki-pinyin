function mobileAndTabletcheck() { var n = !1; return (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0, 4))) && (n = !0), n } var mobileBrowser = mobileAndTabletcheck(); function hideRuby(n) { n.classList.add("unhovered-word") } function showRuby(n) { n.classList.remove("unhovered-word") } function addShowRubyListeners() { const n = document.getElementsByClassName("unhovered-word"); for (var e = n.length - 1; e >= 0; e--) { const a = n[e]; mobileBrowser ? a.addEventListener("touchend", function () { showRuby(a) }, !1) : (a.addEventListener("mouseenter", function () { showRuby(a) }, !1), a.addEventListener("mouseleave", function () { hideRuby(a) }, !1)) } } PinyinConverter = { pinyinRegex: /(shuang|chuang|zhuang|xiang|qiong|shuai|niang|guang|sheng|kuang|shang|jiong|huang|jiang|shuan|xiong|zhang|zheng|zhong|zhuai|zhuan|qiang|chang|liang|chuan|cheng|chong|chuai|hang|peng|chuo|piao|pian|chua|ping|yang|pang|chui|chun|chen|chan|chou|chao|chai|zhun|mang|meng|weng|shai|shei|miao|zhui|mian|yong|ming|wang|zhuo|zhua|shao|yuan|bing|zhen|fang|feng|zhan|zhou|zhao|zhei|zhai|rang|suan|reng|song|seng|dang|deng|dong|xuan|sang|rong|duan|cuan|cong|ceng|cang|diao|ruan|dian|ding|shou|xing|zuan|jiao|zong|zeng|zang|jian|tang|teng|tong|bian|biao|shan|tuan|huan|xian|huai|tiao|tian|hong|xiao|heng|ying|jing|shen|beng|kuan|kuai|nang|neng|nong|juan|kong|nuan|keng|kang|shua|niao|guan|nian|ting|shuo|guai|ning|quan|qiao|shui|gong|geng|gang|qian|bang|lang|leng|long|qing|ling|luan|shun|lian|liao|zhi|lia|liu|qin|lun|lin|luo|lan|lou|qiu|gai|gei|gao|gou|gan|gen|lao|lei|lai|que|gua|guo|nin|gui|niu|nie|gun|qie|qia|jun|kai|kei|kao|kou|kan|ken|qun|nun|nuo|xia|kua|kuo|nen|kui|nan|nou|kun|jue|nao|nei|hai|hei|hao|hou|han|hen|nai|rou|xiu|jin|hua|huo|tie|hui|tun|tui|hun|tuo|tan|jiu|zai|zei|zao|zou|zan|zen|eng|tou|tao|tei|tai|zuo|zui|xin|zun|jie|jia|run|diu|cai|cao|cou|can|cen|die|dia|xue|rui|cuo|cui|dun|cun|cin|ruo|rua|dui|sai|sao|sou|san|sen|duo|den|dan|dou|suo|sui|dao|sun|dei|zha|zhe|dai|xun|ang|ong|wai|fen|fan|fou|fei|zhu|wei|wan|min|miu|mie|wen|men|lie|chi|cha|che|man|mou|mao|mei|mai|yao|you|yan|chu|pin|pie|yin|pen|pan|pou|pao|shi|sha|she|pei|pai|yue|bin|bie|yun|nüe|lve|shu|ben|ban|bao|bei|bai|lüe|nve|ren|ran|rao|xie|re|ri|si|su|se|ru|sa|cu|ce|ca|ji|ci|zi|zu|ze|za|hu|he|ha|ju|ku|ke|qi|ka|gu|ge|ga|li|lu|le|qu|la|ni|xi|nu|ne|na|ti|tu|te|ta|xu|di|du|de|bo|lv|ba|ai|ei|ao|ou|an|en|er|da|wu|wa|wo|fu|fo|fa|nv|mi|mu|yi|ya|ye|me|mo|ma|pi|pu|po|yu|pa|bi|nü|bu|lü|e|o|a)r?[1-5]/gi, vowels: { "a*": "0", "e*": "1", "i*": "2", "o*": "3", "u*": "4", "ü*": "5", "A*": "6", "E*": "7", "I*": "8", "O*": "9", "U*": "10", "Ü*": "11" }, pinyin: { 1: ["ā", "ē", "ī", "ō", "ū", "ǖ", "Ā", "Ē", "Ī", "Ō", "Ū", "Ǖ"], 2: ["á", "é", "í", "ó", "ú", "ǘ", "Á", "É", "Í", "Ó", "Ú", "Ǘ"], 3: ["ǎ", "ě", "ǐ", "ǒ", "ǔ", "ǚ", "Ǎ", "Ě", "Ǐ", "Ǒ", "Ǔ", "Ǚ"], 4: ["à", "è", "ì", "ò", "ù", "ǜ", "À", "È", "Ì", "Ò", "Ù", "Ǜ"], 5: ["a", "e", "i", "o", "u", "ü", "A", "E", "I", "O", "U", "Ü"] }, convert: function (n) { var e, a, i, o, t; if (!(o = n.match(this.pinyinRegex))) return n; for (e = 0, a = o.length; e < a; e++)i = o[e], t = this.getReplacement(i), n = n.replace(i, t); return n }, getReplacement: function (n) { var e, a, i, o, t, u, r, s; for (i in e = this.getAccentMap(), o = n.slice(-1), s = n.slice(0, -1).replace("v", "ü").replace("V", "Ü"), e) if (t = e[i], s.indexOf(i) >= 0) return u = t.match(/.\*/)[0], r = this.vowels[u], a = this.pinyin[o.toString()][r], s.replace(i, t).replace(u, a); return n }, getAccentMap: function () { var n, e, a, i, o, t, u, r; if (!this.accentMap) for (o = (u = "a*i a*o e*i ia* ia*o ie* io* iu* A*I A*O E*I IA* IA*O IE* IO* IU* o*u ua* ua*i ue* ui* uo* üe* O*U UA* UA*I UE* UI* UO* ÜE* A* E* I* O* U* Ü* a* e* i* o* u* ü*").replace(/\*/g, ""), r = u.split(" "), this.accentMap = {}, e = a = 0, i = (t = o.split(" ")).length; a < i; e = ++a)n = t[e], this.accentMap[n] = r[e]; return this.accentMap } }, function () { for (var n = document.getElementsByClassName("wrapped-chinese"), e = 0; e < n.length; e++)if (dType = n[e].getAttribute("display-type")) { if (rType = CHINESE_READING_TYPE, "default" !== n[e].getAttribute("reading-type").toLowerCase() && (rType = n[e].getAttribute("reading-type").toLowerCase()), -1 === ["pinyin", "bopomofo", "jyutping"].indexOf(rType)) continue; dType = dType.toLowerCase(); if (-1 != ["hover", "coloredhover", "coloredhanzi", "reading", "coloredreading", "hanzireading", "coloredhanzireading"].indexOf(dType)) { if (matches = n[e].textContent.match(/(?:([\u4e00-\u9fff]+?)\[([^[]*?)\])|(?:([\p{Sc}\p{So}\p{Mn}\p{P}\p{Z}À-ÿ\w]+?)\[([^[]*?)\])/g)) for (var a = 0; a < matches.length; a++) { var i = matches[a].substring(0, matches[a].length - 1).split("["), o = i[0], t = i[1].split(" "), u = "", r = "", s = !1; o.match(/^[\p{Sc}\p{So}\p{Mn}\p{P}\p{Z}À-ÿ\w]+$/) ? s = !0 : r = o.substring(0, o.length - t.length); var c = !1; "c" === dType.charAt(0) && (c = !0); for (var g = 0; g < t.length; g++)if ("" !== t[g]) { var h = "", p = ""; "pinyin" == rType ? (p = t[g][t[g].length - 1], -1 !== ["1", "2", "3", "4", "5"].indexOf(p) && c && (h = "tone" + p), t[g] = '<span class="pinyin-ruby ' + h + '">' + PinyinConverter.convert(t[g].replace(/\d/g, "") + p) + "</span>") : "bopomofo" == rType ? (p = t[g][t[g].length - 1], -1 !== ["ˊ", "ˇ", "ˋ", "˙", "1", "2", "3", "4", "5"].indexOf(p) && c ? h = "tone" + { "ˊ": "2", "ˇ": "3", "ˋ": "4", "˙": "5", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5" }[p] : c && (h = "tone1"), t[g] = '<span class="pinyin-ruby ' + h + '">' + t[g].replace(/1/g, "").replace(/3/g, "ˇ").replace(/2/g, "ˊ").replace(/4/g, "ˋ").replace(/5/g, "˙") + "</span>") : "jyutping" == rType && (p = t[g][t[g].length - 1], -1 !== ["1", "2", "3", "4", "5", "6"].indexOf(p) && c && (h = "canTone" + p), t[g] = '<span class="pinyin-ruby ' + h + '">' + t[g].replace(/\d/g, "") + p + "</span>"), s ? s && 0 === g && (u += '<span class="hanzi-ruby ' + h + '">' + o + "</span>") : u += '<span class="hanzi-ruby ' + h + '">' + o.substring(o.length - t.length).charAt(g) + "</span>" } "coloredhanzi" == dType ? n[e].innerHTML = n[e].innerHTML.replace(matches[a], r + '<span class="chinese-word">' + u + "</span>") : "coloredhanzireading" == dType || "hanzireading" == dType ? n[e].innerHTML = n[e].innerHTML.replace(matches[a], r + '<span class="chinese-word"><ruby><rb>' + u + "</rb><rt>" + t.join("") + "</rt></ruby></span>") : "coloredhover" == dType || "hover" == dType ? n[e].innerHTML = n[e].innerHTML.replace(matches[a], r + '<span class="chinese-word unhovered-word"><ruby><rb>' + u + "</rb><rt>" + t.join("") + "</rt></ruby></span>") : "coloredreading" != dType && "reading" != dType || ("" !== r && (r += " "), n[e].innerHTML = n[e].innerHTML.replace(matches[a], r + ' <span class="chinese-word">' + t.join("") + "</span> ")) } } else "hanzi" == dType && (n[e].textContent = n[e].textContent.replace(/\[[^[]*?\]/g, "")) } addShowRubyListeners() }();